#!/bin/bash

# Global bb wrapper - finds and runs bb.mts from wesl-js project tree

# Function to find the repository root containing .git
find_repo_root() {
    local dir="$1"
    while [[ "$dir" != "/" ]]; do
        if [[ -d "$dir/.git" ]]; then
            echo "$dir"
            return 0
        fi
        dir="$(dirname "$dir")"
    done
    return 1
}

# Function to check if this is a wesl-js repository
is_wesl_repo() {
    local repo_root="$1"
    local initial_commit
    initial_commit=$(cd "$repo_root" && git rev-list --max-parents=0 HEAD 2>/dev/null)
    # Check against wesl-js initial commit hash
    [[ "$initial_commit" == "6f4c51db254c7b86c7fb839f61d85a2af5c37bc1" ]]
}

# Main logic
main() {
    local current_dir
    current_dir="$(pwd)"
    
    # Find repository root
    local repo_root
    if ! repo_root=$(find_repo_root "$current_dir"); then
        echo "Error: Could not find repository root (.git directory)" >&2
        echo "bb must be run within a wesl-js project tree or worktree" >&2
        exit 1
    fi
    
    # Verify this is a wesl-js repository
    if ! is_wesl_repo "$repo_root"; then
        echo "Error: bb must be run within a wesl-js repository" >&2
        echo "This directory does not appear to be a wesl-js git branch" >&2
        exit 1
    fi
    
    # Look for bb.mts in the expected location
    local bb_script="$repo_root/tools/bin/bb.mts"
    if [[ ! -f "$bb_script" ]]; then
        echo "Error: Could not find bb.mts at $bb_script" >&2
        exit 1
    fi
    
    # Execute the project's bb.mts with all arguments
    exec node --experimental-strip-types "$bb_script" "$@"
}

main "$@"