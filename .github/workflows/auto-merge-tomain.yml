name: auto-merge tomain to main

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - tomain

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.AUTOMERGE_TOKEN }}
          
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Check if tomain is up-to-date with main
        id: check-status
        run: |
          git fetch origin main:main
          git fetch origin tomain:tomain
          
          # Check if tomain has all commits from main
          BEHIND_COUNT=$(git rev-list --count tomain..main)
          echo "behind_count=$BEHIND_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$BEHIND_COUNT" -eq 0 ]; then
            echo "✅ tomain is up-to-date with main"
            echo "up_to_date=true" >> $GITHUB_OUTPUT
          else
            echo "❌ tomain is $BEHIND_COUNT commits behind main"
            echo "up_to_date=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Merge tomain to main
        if: steps.check-status.outputs.up_to_date == 'true'
        run: |
          git checkout main
          git merge --ff-only tomain
          git push origin main
          
      - name: Report merge status
        if: always()
        run: |
          if [ "${{ steps.check-status.outputs.up_to_date }}" != "true" ]; then
            echo "⚠️ Merge skipped: tomain is ${{ steps.check-status.outputs.behind_count }} commits behind main"
            echo "Please rebase or merge main into tomain first"
            exit 1
          elif [ "${{ job.status }}" == "success" ]; then
            echo "✅ Successfully merged tomain into main"
          else
            echo "❌ Merge failed"
            exit 1
          fi